#!/usr/bin/env node

// if(local() && self() !== local()){
//   spawnSync(local(), process.argv.slice(2), {
//     stdio: 'inherit'
//   });
//   process.exit();
// }

// hammer: 千斤顶
// 参数:
// version run help build get

const commander = require('../utils/commander.js');
const pck = require('../package.json');
const findCore = require('../utils/findCore');
const getProject = require('../scaffold/');

commander()
    .addCommander('help', () => {
        console.log(`=====  hammer - ${pck.version}  =====`);
        console.log('=                          =');
        console.log('=      hammer get          =');
        console.log('=      hammer build        =');
        console.log('=      hammer run          =');
        console.log('=      hammer version      =');
        console.log('=      hammer help         =');
        console.log('=                          =');
        console.log('============================');
    })
    .addCommander('get', ({name}) => {
        // ../../hammer-cli/bin/hammer get --name hh
        getProject(name);
    })
    .addCommander('version', () => {
        console.log(`${pck.name} version: ${pck.version}`);
    })
    .addCommander('run', ({dev, build, analyzer}) => {
        // ../hammer-cli/bin/hammer run --dev --build
        // ../hammer-cli/bin/hammer run --dev --build --analyzer
        const connectHammer = require('../utils/connectHammer');
        const hmr = require('../utils/hmr');
        process.env.NODE_ENV = 'production';
        const buildClient = findCore('clientBuild');
        findCore('babelEnv');
        if (dev) process.env.NODE_ENV = 'development';
        connectHammer(hammer => {
            hammer.start();
            if (build) {
                buildClient(hammer.config, {
                    watch: dev,
                    analyzer
                });
            }
            if (dev) {
                hmr(hammer);
            }
        });
    })
    .addCommander('build', () => {
        // ../hammer-cli/bin/hammer build
        const buildClient = findCore('clientBuild');
        const hammerCfg = findCore('config');
        process.env.NODE_ENV = 'production';
        buildClient(hammerCfg);
    })
    .invoke();
